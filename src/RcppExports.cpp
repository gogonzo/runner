// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// fill_run
SEXP fill_run(SEXP x, bool run_for_first, bool only_within);
RcppExport SEXP _runner_fill_run(SEXP xSEXP, SEXP run_for_firstSEXP, SEXP only_withinSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< bool >::type run_for_first(run_for_firstSEXP);
    Rcpp::traits::input_parameter< bool >::type only_within(only_withinSEXP);
    rcpp_result_gen = Rcpp::wrap(fill_run(x, run_for_first, only_within));
    return rcpp_result_gen;
END_RCPP
}
// lag_run
SEXP lag_run(SEXP x, IntegerVector lag, IntegerVector idx, bool nearest);
RcppExport SEXP _runner_lag_run(SEXP xSEXP, SEXP lagSEXP, SEXP idxSEXP, SEXP nearestSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type lag(lagSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type idx(idxSEXP);
    Rcpp::traits::input_parameter< bool >::type nearest(nearestSEXP);
    rcpp_result_gen = Rcpp::wrap(lag_run(x, lag, idx, nearest));
    return rcpp_result_gen;
END_RCPP
}
// length_run
IntegerVector length_run(IntegerVector k, IntegerVector lag, IntegerVector idx);
RcppExport SEXP _runner_length_run(SEXP kSEXP, SEXP lagSEXP, SEXP idxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type k(kSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type lag(lagSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type idx(idxSEXP);
    rcpp_result_gen = Rcpp::wrap(length_run(k, lag, idx));
    return rcpp_result_gen;
END_RCPP
}
// minmax_run
Rcpp::NumericVector minmax_run(Rcpp::NumericVector const& x, std::string metric, bool na_rm);
RcppExport SEXP _runner_minmax_run(SEXP xSEXP, SEXP metricSEXP, SEXP na_rmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector const& >::type x(xSEXP);
    Rcpp::traits::input_parameter< std::string >::type metric(metricSEXP);
    Rcpp::traits::input_parameter< bool >::type na_rm(na_rmSEXP);
    rcpp_result_gen = Rcpp::wrap(minmax_run(x, metric, na_rm));
    return rcpp_result_gen;
END_RCPP
}
// sum_run
Rcpp::NumericVector sum_run(NumericVector x, IntegerVector k, IntegerVector lag, IntegerVector idx, IntegerVector at, bool na_rm, bool na_pad);
RcppExport SEXP _runner_sum_run(SEXP xSEXP, SEXP kSEXP, SEXP lagSEXP, SEXP idxSEXP, SEXP atSEXP, SEXP na_rmSEXP, SEXP na_padSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type k(kSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type lag(lagSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type idx(idxSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type at(atSEXP);
    Rcpp::traits::input_parameter< bool >::type na_rm(na_rmSEXP);
    Rcpp::traits::input_parameter< bool >::type na_pad(na_padSEXP);
    rcpp_result_gen = Rcpp::wrap(sum_run(x, k, lag, idx, at, na_rm, na_pad));
    return rcpp_result_gen;
END_RCPP
}
// mean_run
NumericVector mean_run(NumericVector x, IntegerVector k, IntegerVector lag, IntegerVector idx, IntegerVector at, bool na_rm, bool na_pad);
RcppExport SEXP _runner_mean_run(SEXP xSEXP, SEXP kSEXP, SEXP lagSEXP, SEXP idxSEXP, SEXP atSEXP, SEXP na_rmSEXP, SEXP na_padSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type k(kSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type lag(lagSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type idx(idxSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type at(atSEXP);
    Rcpp::traits::input_parameter< bool >::type na_rm(na_rmSEXP);
    Rcpp::traits::input_parameter< bool >::type na_pad(na_padSEXP);
    rcpp_result_gen = Rcpp::wrap(mean_run(x, k, lag, idx, at, na_rm, na_pad));
    return rcpp_result_gen;
END_RCPP
}
// max_run
NumericVector max_run(Rcpp::NumericVector x, Rcpp::IntegerVector k, Rcpp::IntegerVector lag, Rcpp::IntegerVector idx, Rcpp::IntegerVector at, bool na_rm, bool na_pad);
RcppExport SEXP _runner_max_run(SEXP xSEXP, SEXP kSEXP, SEXP lagSEXP, SEXP idxSEXP, SEXP atSEXP, SEXP na_rmSEXP, SEXP na_padSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type k(kSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type lag(lagSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type idx(idxSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type at(atSEXP);
    Rcpp::traits::input_parameter< bool >::type na_rm(na_rmSEXP);
    Rcpp::traits::input_parameter< bool >::type na_pad(na_padSEXP);
    rcpp_result_gen = Rcpp::wrap(max_run(x, k, lag, idx, at, na_rm, na_pad));
    return rcpp_result_gen;
END_RCPP
}
// min_run
NumericVector min_run(NumericVector x, IntegerVector k, IntegerVector lag, IntegerVector idx, IntegerVector at, bool na_rm, bool na_pad);
RcppExport SEXP _runner_min_run(SEXP xSEXP, SEXP kSEXP, SEXP lagSEXP, SEXP idxSEXP, SEXP atSEXP, SEXP na_rmSEXP, SEXP na_padSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type k(kSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type lag(lagSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type idx(idxSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type at(atSEXP);
    Rcpp::traits::input_parameter< bool >::type na_rm(na_rmSEXP);
    Rcpp::traits::input_parameter< bool >::type na_pad(na_padSEXP);
    rcpp_result_gen = Rcpp::wrap(min_run(x, k, lag, idx, at, na_rm, na_pad));
    return rcpp_result_gen;
END_RCPP
}
// streak_run
IntegerVector streak_run(SEXP x, Rcpp::IntegerVector k, Rcpp::IntegerVector lag, Rcpp::IntegerVector idx, Rcpp::IntegerVector at, bool na_rm, bool na_pad);
RcppExport SEXP _runner_streak_run(SEXP xSEXP, SEXP kSEXP, SEXP lagSEXP, SEXP idxSEXP, SEXP atSEXP, SEXP na_rmSEXP, SEXP na_padSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type k(kSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type lag(lagSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type idx(idxSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type at(atSEXP);
    Rcpp::traits::input_parameter< bool >::type na_rm(na_rmSEXP);
    Rcpp::traits::input_parameter< bool >::type na_pad(na_padSEXP);
    rcpp_result_gen = Rcpp::wrap(streak_run(x, k, lag, idx, at, na_rm, na_pad));
    return rcpp_result_gen;
END_RCPP
}
// which_run
Rcpp::IntegerVector which_run(LogicalVector x, IntegerVector k, IntegerVector lag, IntegerVector idx, IntegerVector at, std::string which, bool na_rm, bool na_pad);
RcppExport SEXP _runner_which_run(SEXP xSEXP, SEXP kSEXP, SEXP lagSEXP, SEXP idxSEXP, SEXP atSEXP, SEXP whichSEXP, SEXP na_rmSEXP, SEXP na_padSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< LogicalVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type k(kSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type lag(lagSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type idx(idxSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type at(atSEXP);
    Rcpp::traits::input_parameter< std::string >::type which(whichSEXP);
    Rcpp::traits::input_parameter< bool >::type na_rm(na_rmSEXP);
    Rcpp::traits::input_parameter< bool >::type na_pad(na_padSEXP);
    rcpp_result_gen = Rcpp::wrap(which_run(x, k, lag, idx, at, which, na_rm, na_pad));
    return rcpp_result_gen;
END_RCPP
}
// window_run
SEXP window_run(SEXP x, IntegerVector k, IntegerVector lag, IntegerVector idx, IntegerVector at, bool na_pad);
RcppExport SEXP _runner_window_run(SEXP xSEXP, SEXP kSEXP, SEXP lagSEXP, SEXP idxSEXP, SEXP atSEXP, SEXP na_padSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type k(kSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type lag(lagSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type idx(idxSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type at(atSEXP);
    Rcpp::traits::input_parameter< bool >::type na_pad(na_padSEXP);
    rcpp_result_gen = Rcpp::wrap(window_run(x, k, lag, idx, at, na_pad));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_runner_fill_run", (DL_FUNC) &_runner_fill_run, 3},
    {"_runner_lag_run", (DL_FUNC) &_runner_lag_run, 4},
    {"_runner_length_run", (DL_FUNC) &_runner_length_run, 3},
    {"_runner_minmax_run", (DL_FUNC) &_runner_minmax_run, 3},
    {"_runner_sum_run", (DL_FUNC) &_runner_sum_run, 7},
    {"_runner_mean_run", (DL_FUNC) &_runner_mean_run, 7},
    {"_runner_max_run", (DL_FUNC) &_runner_max_run, 7},
    {"_runner_min_run", (DL_FUNC) &_runner_min_run, 7},
    {"_runner_streak_run", (DL_FUNC) &_runner_streak_run, 7},
    {"_runner_which_run", (DL_FUNC) &_runner_which_run, 8},
    {"_runner_window_run", (DL_FUNC) &_runner_window_run, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_runner(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
