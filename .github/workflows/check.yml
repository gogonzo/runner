name: Check
on: push
jobs:
  check-r-verse-latest:
    runs-on: ubuntu-18.04
    container: rocker/verse:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@master

      - name: Install dependencies
        shell: Rscript {0}
        run: |
          remotes::install_deps(dependencies = TRUE)

      - name: Check 🔍
        shell: Rscript {0}
        run: |
          devtools::check(cran = TRUE, vignettes = TRUE)

  check-r-verse-devel:
    runs-on: ubuntu-18.04
    container: rocker/verse:devel
    steps:
      - name: Checkout repository
        uses: actions/checkout@master

      - name: Install dependencies
        shell: Rscript {0}
        run: |
          remotes::install_deps(dependencies = TRUE)

      - name: Check 🔍
        shell: Rscript {0}
        run: |
          devtools::check(cran = TRUE, vignettes = TRUE)

  check-r-verse-3-6:
    runs-on: ubuntu-18.04
    container: rocker/verse:3.6.3
    steps:
      - name: Checkout repository 🛎
        uses: actions/checkout@v2

      - name: Install dependencies
        shell: Rscript {0}
        run: |
          remotes::install_deps(dependencies = TRUE)

      - name: Check 🔍
        shell: Rscript {0}
        run: |
          devtools::check(cran = TRUE, vignettes = TRUE)

  r-hub-checks:
    needs: [check-r-verse-latest, check-r-verse-devel, check-r-verse-3-6]
    runs-on: ubuntu-18.04
    container: rocker/tidyverse:latest
    if: "contains(github.event.head_commit.message, 'rhub')"
    steps:
      - name: Checkout repository 🛎
        uses: actions/checkout@v2

      - name: Initialize r-hub
        shell: Rscript {0}
        run: |
          install.packages("rhub")
          rhub::validate_email(
            email = "dawid.kaledkowski@gmail.com",
            token = "${{secrets.RHUB_TOKEN}}"
          )
      - name: Check rhub/debian-clang-devel
        run: Rscript --vanilla inst/automation-checks/check-rhub.R "debian-clang-devel"

      - name: Check r-hub/debian-gcc-devel
        run: Rscript --vanilla inst/automation-checks/check-rhub.R "debian-gcc-devel"

      - name: Check r-hub/linux-x86_64-rocker-gcc-san
        run: Rscript --vanilla inst/automation-checks/check-rhub.R "linux-x86_64-rocker-gcc-san"

      - name: Check r-hub/solaris-x86-patched
        run: Rscript --vanilla inst/automation-checks/check-rhub.R "solaris-x86-patched"

      - name: Check r-hub/fedora-clang-devel
        run: Rscript --vanilla inst/automation-checks/check-rhub.R "fedora-clang-devel"

  win-builder-checks:
    needs: [check-r-verse-latest, check-r-verse-devel, check-r-verse-3-6]
    if: "contains(github.event.head_commit.message, 'win')"
    runs-on: ubuntu-18.04
    container: rocker/tidyverse:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Send package to win-builder
        shell: Rscript {0}
        run: |
          if (!require("devtools")) install.packages('devtools', repos = 'http://cran.rstudio.com')
          devtools::check_win_devel()
          devtools::check_win_oldrelease()
          devtools::check_win_release()

  pkgdown:
    runs-on: ubuntu-latest
    # Only restrict concurrency for non-PR jobs
    concurrency:
      group: pkgdown-${{ github.event_name != 'pull_request' || github.run_id }}
    env:
      GITHUB_PAT: ${{ secrets.GH_TOKEN }}
    if: "contains(github.event.head_commit.message, 'deploy')"
    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::pkgdown, local::.
          needs: website

      - name: Build site
        run: pkgdown::build_site_github_pages(new_process = FALSE, install = FALSE)
        shell: Rscript {0} 

      - name: Deploy Docs 🚀
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          publish_dir: docs

  release:
    name: Create Release
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, 'deploy')"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Prepare release vars
        run: |
          echo "PKGNAME=$(sed -n 's/Package: *\([^ ]*\)/\1/p' DESCRIPTION)" >> $GITHUB_ENV
          echo "PKGVERS=$(sed -n 's/Version: *\([^ ]*\)/\1/p' DESCRIPTION)" >> $GITHUB_ENV
          echo "$(sed -n '2,/^$/p' NEWS.md)" > news.txt
  
      - name: Release
        uses: softprops/action-gh-release@v1
        if: "contains(github.event.head_commit.message, 'deploy')"
        with:
          tag_name: "v${{ env.PKGVERS }}"
          name: "${{ env.PKGNAME }} ${{ env.PKGVERS }}"
          body_path: news.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }} # This token is provided by Actions, you do not need to create your own token
